name: GitHub Actions Demo
on: 
  push:
  schedule:
    - cron: "0 0 * * *"
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    steps:
      - run: |
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: List files in the repository
        run: |
          ls

      - uses: actions/setup-node@v3
        name: Set up Node.js
        with:
          node-version: 16

      #- name: Installing necessary tools - Node.js
      #  run: |
      #    curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
      #    sudo apt-get install -y nodejs
      #    apt-get install -y build-essential
      #    node -v
      #    npm -v

      - name: Installing necessary tools - Terser & CDK CLI
        run: |
          npm install -g terser aws-cdk

      - name: Run JS compressor
        run: |
          terser --compress --mangle --output ./app/app-compressed.js -- ./app/app.js
          mv -f ./app/app-compressed.js ./app/app.js

      - name: Login to Docker Hub
        run: docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_HUB_USERNAME }}/gitops-test:latest

      - name: Publish the Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gitops-test:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: GitOpsDeployment
          role-skip-session-tagging: true

      # - name: aws configure
      #  run: |
      #    cat <<EOT >> ~/.aws/credentials
      #    [default]
      #     aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     EOT"" >>
      #     cat <<EOT >> ~/.aws/config
      #     [default]
      #     region = eu-west-3
      #     output = json
      #     EOT"" >>

      - name: Creake CDK directory
        run: |
          mkdir cdk
      
      - name: Download CDK repository
        run: |
          git clone https://github.com/Levelleor/awscdk-test.git
        working-directory: ${{ github.workspace }}/cdk

      - name: Setup CDK resources
        run: |
          npm install
        working-directory: ${{ github.workspace }}/cdk/awscdk-test

      - name: Deploy container to AWS infrastructure
        run: cdk deploy --require-approval never GitOps-ecs --parameters imageRepo=${{ secrets.DOCKER_HUB_USERNAME }}/gitops-test:latest
        working-directory: ${{ github.workspace }}/cdk/awscdk-test

      - run: echo "üçè This job's status is ${{ job.status }}."
